seed: ${..seed}
algo: ExtrinsicAdapt

load_path: ${..checkpoint} # path to the checkpoint to load

desired_subassemblies: ['yellow_round_peg_2in']
#                            'round_peg_hole_8mm_loose', round_peg_hole_16mm_loose
#                            'round_peg_hole_12mm_loose',
#                            'round_peg_hole_4mm_loose',yellow_round_peg_2in, red_round_peg_15in
#                            'rectangular_peg_hole_4mm_loose',
#                            'rectangular_peg_hole_8mm_loose',
#                            'rectangular_peg_hole_12mm_loose',
#                            'rectangular_peg_hole_16mm_loose']

record_video: True
record_ft: True
tactile_display_viz: True

# taking from training default, allows to over write
# actually, we should write different config for each observation we test
rl:
    pos_action_scale: [0.001, 0.001, 0.001]
    rot_action_scale: ${...task.rl.rot_action_scale}
    clamp_rot: ${...task.rl.clamp_rot}
    clamp_rot_thresh: ${...task.rl.clamp_rot_thresh}

env:
  tactile_seq_length: ${...task.env.tactile_history_len}
  ft_seq_length: ${...task.env.ft_history_len}
  obs_seq_length: ${...task.env.numObsHist}
  stud_obs_seq_length: ${...task.env.numObsStudentHist}

  priv_info_dim: ${...task.env.numStates}
  numObservations: ${...task.env.numObservations}
  numActions: ${...task.env.numActions}
  numTargets: ${...task.env.numTargets}
  socket_pos_obs_noise: [ 0.001, 0.001, 0.0 ]
  socket_rot_obs_noise: [ 0.0, 0.0, 0.0 ]
  fingertip_midpoint_rot_initial: [ -3.14159265359, 0.0, -1.57079632679 ]

  kuka_depth: ${...task.env.kuka_depth}
  table_height: ${...task.env.table_height}


ppo:
  priv_info: False
  extrin_adapt: False
  tactile_info: False
  ft_info: False
  ft_input_dim: 6
  obs_info: False
  tactile_seq_length: ${...task.env.tactile_history_len}
  ft_seq_length: ${...task.env.ft_history_len}
  obs_seq_length: ${...task.env.numObsHist}
  stud_obs_seq_length: ${...task.env.numObsStudentHist}
  priv_info_dim: ${...task.env.numStates}
  student_obs_input_shape: ${...task.env.numObsStudent}

#network:
#  mlp:
#    units: ${...train.network.mlp.units}
#  priv_mlp:
#    units: ${...train.network.priv_mlp.units}
#  tactile_mlp:
#    units: ${...train.network.tactile_mlp.units}
#  ft_mlp:
#    units: ${...train.network.ft_mlp.units}

network:
  mlp:
    units: [512, 256, 128]
  priv_mlp:
    units: [256, 128, 8]
  ft_mlp:
    units: [128, 64, 16]
  obs_mlp:
    units: [1024, 512, 128, 32]
  tactile_mlp:
    units: [300, 128, 32]
  merge_mlp:
    units: [128, 64, 8]
  contact_mlp:
    units: [ 128, 64, 16]
  tactile_decoder:
    num_channels: ${....task.tactile.decoder.num_channels}
    tactile_seq_length: ${....task.env.tactile_history_len}
    img_width: ${....task.tactile.decoder.width}
    img_height: ${....task.tactile.decoder.height}
